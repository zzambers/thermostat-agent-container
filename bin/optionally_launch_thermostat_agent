#!/bin/bash
#
# Optionally, launches the Thermostat agent
# connecting to a pre-configured configured storage.
# See the thermostat storage template doc for creating
# such a storage endpoint:
# https://github.com/jerboaa/thermostat-openshift

required_vars="THERMOSTAT_AGENT_USERNAME \
    THERMOSTAT_AGENT_PASSWORD \
    THERMOSTAT_HOST_OVERVIEW_URL \
    THERMOSTAT_HOST_CPU_URL \
    THERMOSTAT_HOST_MEMORY_URL \
    THERMOSTAT_JVM_OVERVIEW_URL \
    THERMOSTAT_VM_GC_URL \
    THERMOSTAT_VM_MEMORY_URL \
    THERMOSTAT_COMMANDS_URL"
has_required_env=true
for req_var in ${required_vars}; do
  if [ -z "${!req_var}" ]; then
    has_required_env=false
  fi
done

if [ -z ${USER_THERMOSTAT_HOME} ]; then
  echo 1>&2 "${0}: USER_THERMOSTAT_HOME not set."
  return 1
elif [ ! -e "${USER_THERMOSTAT_HOME}/logs" ]; then
  mkdir "${USER_THERMOSTAT_HOME}/logs"
  if [ $? -ne 0 ]; then
    echo 1>&2 "${0}: Could not create directory: ${USER_THERMOSTAT_HOME}/logs"
    return 1
  fi
fi

launch_agent() {
  # Work-around MonitorException bug on early startup. See:
  # http://icedtea.classpath.org/bugzilla/show_bug.cgi?id=3237
  # Check jps output for 'main class information unavailable' and
  # if so delay agent start-up until that changes. Upper bound on
  # the delay: 100 seconds
  for i in $(seq 50); do
    jps_info_for_pid="$(jps 2> /dev/null | egrep '^1[[:space:]]' | sed 's/ -- /_/g' | cut -d_ -f2)"
    if [ "${jps_info_for_pid}" != "main class information unavailable" ]; then
      echo "Ready to start Thermostat agent"
      break
    else
      echo "Waiting for Main class info of PID 1 to become available."
      sleep 2
    fi
  done
  # Finally, launch the agent
  run-thermostat-agent
}

print_vars() {
  for req_var in ${required_vars}; do
    echo "${req_var}=${!req_var}"
  done
}

log_file="$USER_THERMOSTAT_HOME/logs/agent.log"

if ${has_required_env}; then
  cat > ${log_file} <<EOL
Launching the Thermostat agent with the following connection
settings:
EOL
  print_vars >> ${log_file}
  # Launch the agent
  launch_agent >> ${log_file} 2>&1 &
else
  cat > ${log_file} <<EOL
Thermostat agent process not started.
One or more of the required environment variables
not set. Environment was:
EOL
  print_vars >> ${log_file}
fi
return 0
